import {getList, save, update, remove} from '@/api/workflow/category'

export default {
  data() {
    return {
      isUpdate: false,
      formVisible: false,
      groupIdInputDisabled: false,
      formTitle: '添加任务',
      isAdd: true,
      form: {
     <#if values?exists>
     <#list values as key>
      ${key}: ''
     </#list>,
     </#if>
      },
      rules: {

      },
      showTree: false,
      listQuery: {
      <#if values?exists>
      <#list values as key>
        ${key}: undefined
      </#list>,
      </#if>
        page: 1,
        pageSize: 100
      },
      totalCount: 0,
      list: null,
      listLoading: true,
      selRow: {}
    }
  },
  filters: {
    statusFilter(status) {
      const statusMap = {
        published: 'success',
        draft: 'gray',
        deleted: 'danger'
      }
      return statusMap[status]
    }
  },
  created() {
    this.init()
  },
  methods: {
    init() {
      this.fetchData()
    },
    fetchData() {
      this.listLoading = true
      getList(this.listQuery).then(response => {
        this.list = response.data.list
        this.listLoading = false
        this.totalCount = response.data.totalCount
      })
    },
    search() {
      this.fetchData()
    },
    reset() {
      <#if values?exists>
      <#list values as key>
      this.listQuery.${key}=''
      </#list>,
      </#if>
      this.fetchData()
    },
    handleFilter() {
      this.listQuery.page = 1
      this.getList()
    },
    handleClose() {

    },
    handleCurrentChange(currentRow, oldCurrentRow) {
      this.selRow = currentRow
    },
    resetForm() {
      this.form = {}
    },
    add() {
      this.resetForm()
      this.formTitle = '添加分类'
      this.formVisible = true
      this.isAdd = true
      this.isUpdate = false
    },
    fetchNext() {
      this.listQuery.page = this.listQuery.page + 1
      this.fetchData()
    },
    fetchPrev() {
      this.listQuery.page = this.listQuery.page - 1
      this.fetchData()
    },
    fetchPage(page) {
      this.listQuery.page = page
      this.fetchData()
    },
    changeSize(pageSize) {
      this.listQuery.pageSize = pageSize
      this.fetchData()
    },
    save() {
      var self = this
      this.$refs['form'].validate((valid) => {
        if (valid) {
          if (this.isUpdate) {
            update({
           <#if values?exists>
           <#list values as key>
              ${key}: self.form.${key}
           </#list>,
           </#if>
            }).then(response => {
              console.log(response)
              this.$message({
                message: '提交成功',
                type: 'success'
              })
              this.fetchData()
              this.formVisible = false
            })
          } else {
            add({
               <#if values?exists>
               <#list values as key>
                 ${key}: self.form.${key}
               </#list>,
               </#if>
            }).then(response => {
              console.log(response)
              this.$message({
                message: '提交成功',
                type: 'success'
              })
              this.fetchData()
              this.formVisible = false
            })
          }
        } else {
          return false
        }
      })
    },
    checkSel() {
      if (this.selRow && this.selRow.id) {
        return true
      }
      this.$message({
        message: '请选中操作项',
        type: 'warning'
      })
      return false
    },
    edit() {
      if (this.checkSel()) {
        this.isAdd = false
        this.form = this.selRow
        this.formTitle = '修改分类'
        this.formVisible = true
        this.groupIdInputDisabled = true
        this.isUpdate = true
        this.form.pCategoryId = this.selRow.pcategoryId
        this.pCategoryIdDisabled = true
        this.rationDisabled = true
      }
    },
    handleNodeClick(data, node) {
      console.log(data)
      this.form.pCategoryId = data.categoryId
      this.showTree = false
    }
  }
}
